import csv

class CalorieCalculator:
    def __init__(self, dataset_path, food_dataset_path):
        self.dataset_path = dataset_path
        self.food_dataset_path = food_dataset_path
        self.calorie_data = self.load_calorie_data()
        self.food_data = self.load_food_data()

    def load_calorie_data(self):
        calorie_data = []
        try:
            with open(self.dataset_path, 'r', newline='') as file:
                reader = csv.DictReader(file)
                for row in reader:
                    calorie_data.append(row)
        except FileNotFoundError:
            print(f"Error: Calorie data file '{self.dataset_path}' not found.")
        except Exception as e:
            print("An error occurred while loading calorie data:", str(e))
        return calorie_data

    def load_food_data(self):
        food_data = {}
        try:
            with open(self.food_dataset_path, 'r', newline='') as file:
                reader = csv.DictReader(file)
                for row in reader:
                    food_data[row['FoodItem'].lower()] = int(row['calories per serving'].split()[0]) # Split to remove 'cal' from calorie count
        except FileNotFoundError:
            print(f"Error: Food data file '{self.food_dataset_path}' not found.")
        except Exception as e:
            print("An error occurred while loading food data:", str(e))
        return food_data

    def calculate_calories(self, age, gender, weight, height, activity_level):
        # Calculate total calories based on user information
        # This part remains unchanged
        pass

    def get_food_calories(self, food_item):
        if food_item.lower() in self.food_data:
            return self.food_data[food_item.lower()]
        else:
            return None  # Return None if food item not found

def main():
    dataset_path = 'C:\\Users\\USER\\OneDrive\\Documents\\elite eagles\\calories.csv'
    food_dataset_path = 'C:\\Users\\USER\\OneDrive\\Documents\\elite eagles\\food  data.csv'
    calculator = CalorieCalculator(dataset_path, food_dataset_path)

    # Ask the user to enter a food item for calorie counting
    food_item = input("Enter the food item for calorie counting: ")
    calories = calculator.get_food_calories(food_item)
    if calories is not None:
        print(f"The calorie count for {food_item} is {calories} calories per serving.")
    else:
        print("Food item not found in the database.")

if __name__ == "__main__":
    main()
